Index: src/main/java/com/example/view/controllers/GameMenuController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.view.controllers;\r\n\r\nimport com.example.controller.GameController;\r\n\r\nimport com.example.model.BuildingImage;\r\nimport com.example.model.User;\r\nimport com.example.model.UsersData;\r\nimport com.example.model.buildings.BarCategory;\r\nimport com.example.model.buildings.BuildingType;\r\nimport com.example.view.Main;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.layout.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class GameMenuController {\r\n    private final GameController controller = GameController.getInstance();\r\n    @FXML\r\n    private BorderPane borderPane;\r\n    \r\n    @FXML\r\n    private VBox bottom;\r\n    @FXML\r\n    private HBox imagesHBox;\r\n    @FXML\r\n    private HBox typesHBox;\r\n    private BuildingType selectedBuilding;\r\n    public static List<List<BuildingImage>> listOfLists = new ArrayList<List<BuildingImage>>(7);\r\n    public static BarCategory currentCategory = BarCategory.CASTLE;\r\n\r\n    public void initialize() {\r\n        controller.getGame().setGameMap(100);\r\n        ArrayList<User> arrayList = new ArrayList<>();\r\n        arrayList.add(UsersData.getUsersData().getUserByUsername(\"user1\"));\r\n        arrayList.add(UsersData.getUsersData().getUserByUsername(\"user2\"));\r\n        arrayList.add(UsersData.getUsersData().getUserByUsername(\"user3\"));\r\n        controller.getGame().makeNewGovernances(arrayList);\r\n        for (BarCategory barCategory : BarCategory.values()){\r\n            if (!barCategory.equals(BarCategory.NONE)){\r\n                ArrayList<BuildingImage> buildingImages = new ArrayList<>();\r\n                for (BuildingType buildingType : BuildingType.values()){\r\n                    if (buildingType.getBarCategory().equals(barCategory)){\r\n                        try {\r\n                            buildingImages.add(new BuildingImage(imagesHBox, buildingType.getName(), 80, this, false));\r\n                        }\r\n                        catch (Exception e){\r\n                            System.out.println(buildingType.getName());\r\n                            System.out.println(e.getMessage());\r\n                        }\r\n                    }\r\n                }\r\n                listOfLists.add(buildingImages);\r\n            }\r\n        }\r\n        for (List<BuildingImage> buildingImages : listOfLists){\r\n            if (buildingImages.size() > 6){\r\n                for (BuildingImage buildingImage : buildingImages){\r\n                    buildingImage.setSize(45);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    public void initMap() {\r\n        borderPane.setCenter(controller.getGame().getGameMap());\r\n        controller.getGame().getGameMap().addShortcuts();\r\n        //bottom.setBackground(new Background(new BackgroundFill(Color.GREEN)));\r\n        //bottom.setStyle(\"-fx-background-color: Green;\");\r\n        BackgroundSize backgroundSize = new BackgroundSize(1.00,\r\n                1.00,\r\n                true,\r\n                true,\r\n                false,\r\n                false);\r\n        BackgroundImage image = new BackgroundImage(new Image(Main.class.getResourceAsStream(\"/images/icons/menu.png\")),\r\n                BackgroundRepeat.NO_REPEAT,\r\n                BackgroundRepeat.NO_REPEAT,\r\n                BackgroundPosition.CENTER,\r\n                backgroundSize);\r\n        ArrayList<BuildingImage> typeList = new ArrayList<>();\r\n        for (BarCategory barCategory : BarCategory.values()){\r\n            if (!barCategory.equals(BarCategory.NONE))\r\n                typeList.add(new BuildingImage(typesHBox, barCategory.getName(), 20, this, true));\r\n        }\r\n        changeMenu(currentCategory);\r\n//        typeList.add(new BuildingImage(typesHBox, \"CastleBuilding\", 20));\r\n//        typeList.add(new BuildingImage(typesHBox, \"FarmBuilding\", 20));\r\n//        typeList.add(new BuildingImage(typesHBox, \"FoodProcessing\", 20));\r\n//        typeList.add(new BuildingImage(typesHBox, \"IndustryBuilding\", 20));\r\n//        typeList.add(new BuildingImage(typesHBox, \"TowerBuilding\", 20));\r\n//        typeList.add(new BuildingImage(typesHBox, \"TowerBuilding\", 20));\r\n//        typeList.add(new BuildingImage(typesHBox, \"WeaponBuilding\", 20));\r\n//        for (BuildingType buildingType : BuildingType.values()){\r\n//            if (buildingType.getBarCategory().equals(currentCategory)){\r\n//                try {\r\n//                    castleImages.add(new BuildingImage(imagesHBox, buildingType.getName(), 80));\r\n//                }\r\n//                catch (Exception e){\r\n//                    System.out.println(buildingType.getName());\r\n//                    System.out.println(e.getMessage());\r\n//                }\r\n//            }\r\n//        }\r\n        //BuildingImage buildingImage = new BuildingImage(imagesHBox, \"Barracks\",80);\r\n        //BuildingImage buildingImage1 = new BuildingImage(imagesHBox, \"mercenary post\",80);\r\n\r\n        bottom.toFront();\r\n        //bottom.setPrefHeight(300);\r\n        //bottom.setMinHeight(600);\r\n//        bottom.setStyle(\"-fx-background-color: green\");\r\n        bottom.setBackground(new Background(image));\r\n    }\r\n    public void changeMenu(BarCategory barCategory){\r\n        for (List<BuildingImage> buildingImages : listOfLists){\r\n            if (BuildingType.getBuildingTypeByName(\r\n                    buildingImages.get(0).getName()).getBarCategory().equals(barCategory)){\r\n                imagesHBox.getChildren().removeAll(imagesHBox.getChildren());\r\n                for (BuildingImage buildingImage : buildingImages){\r\n                    imagesHBox.getChildren().add(buildingImage.getImageView());\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public BuildingType getSelectedBuilding() {\r\n        return selectedBuilding;\r\n    }\r\n\r\n    public void setSelectedBuilding(BuildingType selectedBuilding) {\r\n        this.selectedBuilding = selectedBuilding;\r\n        controller.getGame().getGameMap().setSelectedBuilding(selectedBuilding);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/view/controllers/GameMenuController.java b/src/main/java/com/example/view/controllers/GameMenuController.java
--- a/src/main/java/com/example/view/controllers/GameMenuController.java	(revision 486cf51bedd1e073ba3033c0f30af1b609364f04)
+++ b/src/main/java/com/example/view/controllers/GameMenuController.java	(date 1687986222241)
@@ -11,6 +11,7 @@
 import javafx.fxml.FXML;
 import javafx.scene.image.Image;
 import javafx.scene.layout.*;
+
 import java.util.ArrayList;
 import java.util.List;
 
@@ -18,7 +19,7 @@
     private final GameController controller = GameController.getInstance();
     @FXML
     private BorderPane borderPane;
-    
+
     @FXML
     private VBox bottom;
     @FXML
@@ -36,15 +37,14 @@
         arrayList.add(UsersData.getUsersData().getUserByUsername("user2"));
         arrayList.add(UsersData.getUsersData().getUserByUsername("user3"));
         controller.getGame().makeNewGovernances(arrayList);
-        for (BarCategory barCategory : BarCategory.values()){
-            if (!barCategory.equals(BarCategory.NONE)){
+        for (BarCategory barCategory : BarCategory.values()) {
+            if (!barCategory.equals(BarCategory.NONE)) {
                 ArrayList<BuildingImage> buildingImages = new ArrayList<>();
-                for (BuildingType buildingType : BuildingType.values()){
-                    if (buildingType.getBarCategory().equals(barCategory)){
+                for (BuildingType buildingType : BuildingType.values()) {
+                    if (buildingType.getBarCategory().equals(barCategory)) {
                         try {
                             buildingImages.add(new BuildingImage(imagesHBox, buildingType.getName(), 80, this, false));
-                        }
-                        catch (Exception e){
+                        } catch (Exception e) {
                             System.out.println(buildingType.getName());
                             System.out.println(e.getMessage());
                         }
@@ -53,9 +53,9 @@
                 listOfLists.add(buildingImages);
             }
         }
-        for (List<BuildingImage> buildingImages : listOfLists){
-            if (buildingImages.size() > 6){
-                for (BuildingImage buildingImage : buildingImages){
+        for (List<BuildingImage> buildingImages : listOfLists) {
+            if (buildingImages.size() > 6) {
+                for (BuildingImage buildingImage : buildingImages) {
                     buildingImage.setSize(45);
                 }
             }
@@ -63,7 +63,6 @@
     }
 
 
-    
     public void initMap() {
         borderPane.setCenter(controller.getGame().getGameMap());
         controller.getGame().getGameMap().addShortcuts();
@@ -81,7 +80,7 @@
                 BackgroundPosition.CENTER,
                 backgroundSize);
         ArrayList<BuildingImage> typeList = new ArrayList<>();
-        for (BarCategory barCategory : BarCategory.values()){
+        for (BarCategory barCategory : BarCategory.values()) {
             if (!barCategory.equals(BarCategory.NONE))
                 typeList.add(new BuildingImage(typesHBox, barCategory.getName(), 20, this, true));
         }
@@ -113,12 +112,13 @@
 //        bottom.setStyle("-fx-background-color: green");
         bottom.setBackground(new Background(image));
     }
-    public void changeMenu(BarCategory barCategory){
-        for (List<BuildingImage> buildingImages : listOfLists){
+
+    public void changeMenu(BarCategory barCategory) {
+        for (List<BuildingImage> buildingImages : listOfLists) {
             if (BuildingType.getBuildingTypeByName(
-                    buildingImages.get(0).getName()).getBarCategory().equals(barCategory)){
+                    buildingImages.get(0).getName()).getBarCategory().equals(barCategory)) {
                 imagesHBox.getChildren().removeAll(imagesHBox.getChildren());
-                for (BuildingImage buildingImage : buildingImages){
+                for (BuildingImage buildingImage : buildingImages) {
                     imagesHBox.getChildren().add(buildingImage.getImageView());
                 }
             }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"FrameworkDetectionExcludesConfiguration\">\r\n    <file type=\"web\" url=\"file://$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_19\" default=\"true\" project-jdk-name=\"openjdk-20 (3)\" project-jdk-type=\"JavaSDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 486cf51bedd1e073ba3033c0f30af1b609364f04)
+++ b/.idea/misc.xml	(date 1687984866077)
@@ -11,5 +11,5 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_19" default="true" project-jdk-name="openjdk-20 (3)" project-jdk-type="JavaSDK" />
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_X" default="true" project-jdk-name="openjdk-20 (3)" project-jdk-type="JavaSDK" />
 </project>
\ No newline at end of file
