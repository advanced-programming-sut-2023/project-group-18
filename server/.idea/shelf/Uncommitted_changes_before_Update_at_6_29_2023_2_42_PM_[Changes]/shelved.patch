Index: src/main/java/com/example/view/controllers/GameMenuController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.view.controllers;\r\n\r\nimport com.example.controller.GameController;\r\n\r\nimport com.example.model.BuildingImage;\r\nimport com.example.model.buildings.BarCategory;\r\nimport com.example.model.buildings.BuildingType;\r\nimport com.example.model.map.GameMap;\r\nimport com.example.view.Main;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.text.TextBoundsType;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class GameMenuController {\r\n    private final GameController controller = GameController.getInstance();\r\n    @FXML\r\n    private BorderPane borderPane;\r\n    \r\n    @FXML\r\n    private VBox bottom;\r\n    @FXML\r\n    private HBox imagesHBox;\r\n    @FXML\r\n    private HBox typesHBox;\r\n    private BuildingType selectedBuilding;\r\n    public static List<List<BuildingImage>> listOfLists = new ArrayList<List<BuildingImage>>(7);\r\n    public static BarCategory currentCategory = BarCategory.CASTLE;\r\n\r\n    public void initialize() {\r\n        controller.getGame().setGameMap(100);\r\n        for (BarCategory barCategory : BarCategory.values()){\r\n            if (!barCategory.equals(BarCategory.NONE)){\r\n                ArrayList<BuildingImage> buildingImages = new ArrayList<>();\r\n                for (BuildingType buildingType : BuildingType.values()){\r\n                    if (buildingType.getBarCategory().equals(barCategory)){\r\n                        try {\r\n                            buildingImages.add(new BuildingImage(imagesHBox, buildingType.getName(), 80, this, false));\r\n                        }\r\n                        catch (Exception e){\r\n                            System.out.println(buildingType.getName());\r\n                            System.out.println(e.getMessage());\r\n                        }\r\n                    }\r\n                }\r\n                listOfLists.add(buildingImages);\r\n            }\r\n        }\r\n        for (List<BuildingImage> buildingImages : listOfLists){\r\n            if (buildingImages.size() > 6){\r\n                for (BuildingImage buildingImage : buildingImages){\r\n                    buildingImage.setSize(45);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    public void initMap() {\r\n        borderPane.setCenter(controller.getGame().getGameMap());\r\n        controller.getGame().getGameMap().addShortcuts();\r\n        //bottom.setBackground(new Background(new BackgroundFill(Color.GREEN)));\r\n        //bottom.setStyle(\"-fx-background-color: Green;\");\r\n        BackgroundSize backgroundSize = new BackgroundSize(1.00,\r\n                1.00,\r\n                true,\r\n                true,\r\n                false,\r\n                false);\r\n        BackgroundImage image = new BackgroundImage(new Image(Main.class.getResourceAsStream(\"/images/icons/menu.png\")),\r\n                BackgroundRepeat.NO_REPEAT,\r\n                BackgroundRepeat.NO_REPEAT,\r\n                BackgroundPosition.CENTER,\r\n                backgroundSize);\r\n        ArrayList<BuildingImage> typeList = new ArrayList<>();\r\n        for (BarCategory barCategory : BarCategory.values()){\r\n            if (!barCategory.equals(BarCategory.NONE))\r\n                typeList.add(new BuildingImage(typesHBox, barCategory.getName(), 20, this, true));\r\n        }\r\n        changeMenu(currentCategory);\r\n//        typeList.add(new BuildingImage(typesHBox, \"CastleBuilding\", 20));\r\n//        typeList.add(new BuildingImage(typesHBox, \"FarmBuilding\", 20));\r\n//        typeList.add(new BuildingImage(typesHBox, \"FoodProcessing\", 20));\r\n//        typeList.add(new BuildingImage(typesHBox, \"IndustryBuilding\", 20));\r\n//        typeList.add(new BuildingImage(typesHBox, \"TowerBuilding\", 20));\r\n//        typeList.add(new BuildingImage(typesHBox, \"TowerBuilding\", 20));\r\n//        typeList.add(new BuildingImage(typesHBox, \"WeaponBuilding\", 20));\r\n//        for (BuildingType buildingType : BuildingType.values()){\r\n//            if (buildingType.getBarCategory().equals(currentCategory)){\r\n//                try {\r\n//                    castleImages.add(new BuildingImage(imagesHBox, buildingType.getName(), 80));\r\n//                }\r\n//                catch (Exception e){\r\n//                    System.out.println(buildingType.getName());\r\n//                    System.out.println(e.getMessage());\r\n//                }\r\n//            }\r\n//        }\r\n        //BuildingImage buildingImage = new BuildingImage(imagesHBox, \"Barracks\",80);\r\n        //BuildingImage buildingImage1 = new BuildingImage(imagesHBox, \"mercenary post\",80);\r\n\r\n        bottom.toFront();\r\n        //bottom.setPrefHeight(300);\r\n        //bottom.setMinHeight(600);\r\n//        bottom.setStyle(\"-fx-background-color: green\");\r\n        bottom.setBackground(new Background(image));\r\n    }\r\n    public void changeMenu(BarCategory barCategory){\r\n        for (List<BuildingImage> buildingImages : listOfLists){\r\n            if (BuildingType.getBuildingTypeByName(\r\n                    buildingImages.get(0).getName()).getBarCategory().equals(barCategory)){\r\n                imagesHBox.getChildren().removeAll(imagesHBox.getChildren());\r\n                for (BuildingImage buildingImage : buildingImages){\r\n                    imagesHBox.getChildren().add(buildingImage.getImageView());\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public BuildingType getSelectedBuilding() {\r\n        return selectedBuilding;\r\n    }\r\n\r\n    public void setSelectedBuilding(BuildingType selectedBuilding) {\r\n        this.selectedBuilding = selectedBuilding;\r\n        controller.getGame().getGameMap().setSelectedBuilding(selectedBuilding);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/view/controllers/GameMenuController.java b/src/main/java/com/example/view/controllers/GameMenuController.java
--- a/src/main/java/com/example/view/controllers/GameMenuController.java	(revision 8dbe9a7d50f87a9a2f7951693ca60e813a724bee)
+++ b/src/main/java/com/example/view/controllers/GameMenuController.java	(date 1688029918353)
@@ -3,18 +3,16 @@
 import com.example.controller.GameController;
 
 import com.example.model.BuildingImage;
+import com.example.model.assets.Asset;
+import com.example.model.assets.AssetType;
 import com.example.model.buildings.BarCategory;
 import com.example.model.buildings.BuildingType;
-import com.example.model.map.GameMap;
 import com.example.view.Main;
 import javafx.fxml.FXML;
 import javafx.scene.control.Button;
+import javafx.scene.control.Label;
 import javafx.scene.image.Image;
-import javafx.scene.image.ImageView;
-import javafx.scene.input.MouseEvent;
 import javafx.scene.layout.*;
-import javafx.scene.paint.Color;
-import javafx.scene.text.TextBoundsType;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -31,7 +29,8 @@
     @FXML
     private HBox typesHBox;
     private BuildingType selectedBuilding;
-    public static List<List<BuildingImage>> listOfLists = new ArrayList<List<BuildingImage>>(7);
+    public static List<List<BuildingImage>> buildingListOfLists = new ArrayList<List<BuildingImage>>(7);
+    public static List<List<BuildingImage>> assetListOfLists = new ArrayList<List<BuildingImage>>(3);
     public static BarCategory currentCategory = BarCategory.CASTLE;
 
     public void initialize() {
@@ -42,7 +41,7 @@
                 for (BuildingType buildingType : BuildingType.values()){
                     if (buildingType.getBarCategory().equals(barCategory)){
                         try {
-                            buildingImages.add(new BuildingImage(imagesHBox, buildingType.getName(), 80, this, false));
+                            buildingImages.add(new BuildingImage(imagesHBox, buildingType.getName(), 80, this, false,"buildings"));
                         }
                         catch (Exception e){
                             System.out.println(buildingType.getName());
@@ -50,16 +49,38 @@
                         }
                     }
                 }
-                listOfLists.add(buildingImages);
+                buildingListOfLists.add(buildingImages);
             }
         }
-        for (List<BuildingImage> buildingImages : listOfLists){
+        for (AssetType assetType : AssetType.values()){
+            ArrayList<BuildingImage> assetImages = new ArrayList<>();
+            for (Asset asset : Asset.values()){
+                if (asset.getAssetType().equals(assetType)){
+                    try {
+                        assetImages.add(new BuildingImage(imagesHBox, asset.getName(), 50, this, false,"assets"));
+                    }
+                    catch (Exception e){
+                        System.out.println(asset.getName());
+                        System.out.println(e.getMessage());
+                    }
+                }
+            }
+            assetListOfLists.add(assetImages);
+        }
+        for (List<BuildingImage> buildingImages : buildingListOfLists){
             if (buildingImages.size() > 6){
                 for (BuildingImage buildingImage : buildingImages){
                     buildingImage.setSize(45);
                 }
             }
         }
+        for (List<BuildingImage> buildingImages : assetListOfLists){
+            if (buildingImages.size() > 6){
+                for (BuildingImage buildingImage : buildingImages){
+                    buildingImage.setSize(40);
+                }
+            }
+        }
     }
 
 
@@ -81,11 +102,19 @@
                 BackgroundPosition.CENTER,
                 backgroundSize);
         ArrayList<BuildingImage> typeList = new ArrayList<>();
-        for (BarCategory barCategory : BarCategory.values()){
-            if (!barCategory.equals(BarCategory.NONE))
-                typeList.add(new BuildingImage(typesHBox, barCategory.getName(), 20, this, true));
+        ArrayList<BuildingImage> shopImages = new ArrayList<>();
+        for (AssetType assetType : AssetType.values()){
+            shopImages.add(new BuildingImage(typesHBox, assetType.getName(), 30, this, true, "assets"));
         }
-        changeMenu(currentCategory);
+        for (BuildingImage assetType : shopImages){
+            assetType.addToHBox();
+        }
+//        for (BarCategory barCategory : BarCategory.values()){
+//            if (!barCategory.equals(BarCategory.NONE))
+//                typeList.add(new BuildingImage(typesHBox, barCategory.getName(), 20, this, true,"buildings"));
+//        }
+//        changeMenu(currentCategory);
+
 //        typeList.add(new BuildingImage(typesHBox, "CastleBuilding", 20));
 //        typeList.add(new BuildingImage(typesHBox, "FarmBuilding", 20));
 //        typeList.add(new BuildingImage(typesHBox, "FoodProcessing", 20));
@@ -114,7 +143,7 @@
         bottom.setBackground(new Background(image));
     }
     public void changeMenu(BarCategory barCategory){
-        for (List<BuildingImage> buildingImages : listOfLists){
+        for (List<BuildingImage> buildingImages : buildingListOfLists){
             if (BuildingType.getBuildingTypeByName(
                     buildingImages.get(0).getName()).getBarCategory().equals(barCategory)){
                 imagesHBox.getChildren().removeAll(imagesHBox.getChildren());
@@ -124,7 +153,26 @@
             }
         }
     }
+    public void changeShopAssetType(AssetType assetType){
+        System.out.println(assetType.getName());
+        for (List<BuildingImage> assetImages : assetListOfLists){
+            if (Asset.getAssetByName(assetImages.get(0).getName()).getAssetType().equals(assetType)){
+                imagesHBox.getChildren().removeAll(imagesHBox.getChildren());
+                for (BuildingImage assetImage : assetImages){
+                    assetImage.addToHBox();
+                }
+            }
+        }
+    }
 
+    public void clickOnAsset(Asset asset){
+        int stock = 0;
+        //controller.getGame().getCurrentGovernance().getAssetCount(asset);
+        Label stockLabel = new Label("Stock: " + stock);
+        Button buyButton = new Button("Buy");
+        Button sellButton = new Button("Sell");
+        typesHBox.getChildren().addAll(stockLabel, buyButton, sellButton);
+    }
     public BuildingType getSelectedBuilding() {
         return selectedBuilding;
     }
Index: src/main/java/com/example/model/map/MapGestures.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.model.map;\r\n\r\nimport com.example.model.buildings.IndustrialBuilding;\r\nimport com.google.gson.JsonElement;\r\nimport javafx.event.EventHandler;\r\nimport javafx.scene.control.ButtonBar.ButtonData;\r\nimport javafx.scene.input.MouseButton;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.input.ScrollEvent;\r\n\r\npublic class MapGestures {\r\n    private static final double MAX_SCALE = 15.0d;\r\n    private static final double MIN_SCALE = 1.0d;\r\n    private static final double DELTA_SCALE = 1.05d;\r\n    private static final double RESET_X = 420.0d;\r\n    private static final double RESET_Y = 59.0d;\r\n    private GameMap gameMap;\r\n    private double mouseAnchorX;\r\n    private double mouseAnchorY;\r\n    private double translateAnchorX;\r\n    private double translateAnchorY;\r\n\r\n    protected MapGestures(GameMap gameMap) {\r\n        this.gameMap = gameMap;\r\n        gameMap.setTranslateX(-RESET_X);\r\n        gameMap.setTranslateY(-RESET_Y);\r\n    }\r\n\r\n    private double getResetX() {\r\n        return gameMap.getBoundsInParent().getMinX();\r\n    }\r\n\r\n    private double getResetY() {\r\n        return gameMap.getBoundsInParent().getMinY();\r\n    }\r\n\r\n    private double clamp(double value, double min, double max) {\r\n        if (Double.compare(value, min) < 0)\r\n            return min;\r\n        if (Double.compare(value, max) > 0)\r\n            return max;\r\n        return value;\r\n    }\r\n\r\n    protected EventHandler<MouseEvent> getOnMousePressedEventHandler() {\r\n        return onMousePressedEventHandler;\r\n    }\r\n\r\n    protected EventHandler<MouseEvent> getOnMouseDraggedEventHandler() {\r\n        return onMouseDraggedEventHandler;\r\n    }\r\n\r\n    protected EventHandler<MouseEvent> getOnMouseMovedEventHandler() {\r\n        return onMouseMovedEventHandler;\r\n    }\r\n\r\n    protected EventHandler<ScrollEvent> getOnScrollEventHandler() {\r\n        return onScrollEventHandler;\r\n    }\r\n\r\n    private EventHandler<MouseEvent> onMousePressedEventHandler = new EventHandler<MouseEvent>() {\r\n        @Override\r\n        public void handle(MouseEvent event) {\r\n            mouseAnchorX = event.getSceneX();\r\n            mouseAnchorY = event.getSceneY();\r\n            translateAnchorX = gameMap.getTranslateX();\r\n            translateAnchorY = gameMap.getTranslateY();\r\n            if (gameMap.getSelectedBuilding() != null){\r\n                System.out.println(gameMap.getSelectedBuilding().getName());\r\n                switch (gameMap.getSelectedBuilding().getCategory()){\r\n                    case INDUSTRIAL_BUILDING -> {\r\n                        IndustrialBuilding industrialBuilding = new IndustrialBuilding()\r\n                    }\r\n                }\r\n                gameMap.setSelectedBuilding(null);\r\n            }\r\n        }\r\n    };\r\n\r\n    private EventHandler<MouseEvent> onMouseDraggedEventHandler = new EventHandler<MouseEvent>() {\r\n        @Override\r\n        public void handle(MouseEvent event) {\r\n            if (event.getButton().compareTo(MouseButton.PRIMARY) == 0)\r\n                return;\r\n            final double xTranslate = translateAnchorX + event.getSceneX() - mouseAnchorX;\r\n            final double yTranslate = translateAnchorY + event.getSceneY() - mouseAnchorY;\r\n            gameMap.setTranslateX(xTranslate);\r\n            gameMap.setTranslateY(yTranslate);\r\n            event.consume();\r\n        }\r\n    };\r\n\r\n    private EventHandler<MouseEvent> onMouseMovedEventHandler = new EventHandler<MouseEvent>() {\r\n        @Override\r\n        public void handle(MouseEvent event) {\r\n            if (event.getButton().compareTo(MouseButton.PRIMARY) != 0)\r\n                return;\r\n                double mouseAnchorX2 = event.getSceneX();\r\n                double mouseAnchorY2 = event.getSceneY();\r\n                double startX = (mouseAnchorX - getResetX()) / gameMap.getScale() - GameMap.TILE_LENGTH / 2;\r\n                double startY = (mouseAnchorY - getResetY()) / gameMap.getScale() - GameMap.TILE_LENGTH / 2;\r\n                double endX = (mouseAnchorX2 - getResetX()) / gameMap.getScale() - GameMap.TILE_LENGTH / 2;\r\n                double endY = (mouseAnchorY2 - getResetY()) / gameMap.getScale() - GameMap.TILE_LENGTH / 2;\r\n                gameMap.setSelectedTiles(startX, startY, endX, endY);\r\n            }\r\n    };\r\n\r\n    private EventHandler<ScrollEvent> onScrollEventHandler = new EventHandler<ScrollEvent>() {\r\n        @Override\r\n        public void handle(ScrollEvent event) {\r\n            double scale = gameMap.getScale();\r\n            if (event.getDeltaY() < 0)\r\n                scale /= DELTA_SCALE;\r\n            else\r\n                scale *= DELTA_SCALE;\r\n            scale = clamp(scale, MIN_SCALE, MAX_SCALE);\r\n            gameMap.setScale(scale);\r\n            event.consume();\r\n        }\r\n\r\n    };\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/model/map/MapGestures.java b/src/main/java/com/example/model/map/MapGestures.java
--- a/src/main/java/com/example/model/map/MapGestures.java	(revision 8dbe9a7d50f87a9a2f7951693ca60e813a724bee)
+++ b/src/main/java/com/example/model/map/MapGestures.java	(date 1687977055816)
@@ -69,7 +69,7 @@
                 System.out.println(gameMap.getSelectedBuilding().getName());
                 switch (gameMap.getSelectedBuilding().getCategory()){
                     case INDUSTRIAL_BUILDING -> {
-                        IndustrialBuilding industrialBuilding = new IndustrialBuilding()
+                        //IndustrialBuilding industrialBuilding = new IndustrialBuilding()
                     }
                 }
                 gameMap.setSelectedBuilding(null);
Index: src/main/java/com/example/model/BuildingImage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.model;\r\n\r\nimport com.example.model.buildings.BarCategory;\r\nimport com.example.model.buildings.BuildingType;\r\nimport com.example.view.Main;\r\nimport com.example.view.controllers.GameMenuController;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.event.EventHandler;\r\npublic class BuildingImage {\r\n    private HBox imageHBox;\r\n    private String name;\r\n    private int size;\r\n    private ImageView imageView;\r\n    private GameMenuController gameMenuController;\r\n\r\n    public BuildingImage(HBox imageHBox, String name, int size, GameMenuController gameMenuController, boolean type) {\r\n        this.imageHBox = imageHBox;\r\n        this.name = name;\r\n        this.size = size;\r\n        this.gameMenuController = gameMenuController;\r\n        Image image = new Image(Main.class.getResourceAsStream(\"/images/buildings/\" + name + \".png\"));\r\n        imageView = new ImageView(image);\r\n        imageView.setFitHeight(size);\r\n        imageView.setFitWidth(size);\r\n        if (type){\r\n            imageHBox.getChildren().add(imageView);\r\n            imageView.setOnMouseClicked(new EventHandler<MouseEvent>() {\r\n                @Override\r\n                public void handle(MouseEvent mouseEvent) {\r\n                    gameMenuController.changeMenu(BarCategory.getBarCategoryByName(name));\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            imageView.setOnMouseClicked(new EventHandler<MouseEvent>() {\r\n                @Override\r\n                public void handle(MouseEvent mouseEvent) {\r\n                    gameMenuController.setSelectedBuilding(BuildingType.getBuildingTypeByName(name));\r\n                }\r\n            });\r\n        }\r\n        //imageHBox.getChildren().add(imageView);\r\n    }\r\n\r\n    public void addToHBox(){\r\n        imageHBox.getChildren().add(imageView);\r\n    }\r\n\r\n    public void removeOfHBox(){\r\n        imageHBox.getChildren().remove(imageView);\r\n    }\r\n\r\n    public HBox getImageHBox() {\r\n        return imageHBox;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public int getSize() {\r\n        return size;\r\n    }\r\n\r\n    public ImageView getImageView() {\r\n        return imageView;\r\n    }\r\n\r\n    public void setSize(int size){\r\n        imageView.setFitHeight(size);\r\n        imageView.setFitWidth(size);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/model/BuildingImage.java b/src/main/java/com/example/model/BuildingImage.java
--- a/src/main/java/com/example/model/BuildingImage.java	(revision 8dbe9a7d50f87a9a2f7951693ca60e813a724bee)
+++ b/src/main/java/com/example/model/BuildingImage.java	(date 1688029751492)
@@ -1,5 +1,7 @@
 package com.example.model;
 
+import com.example.model.assets.Asset;
+import com.example.model.assets.AssetType;
 import com.example.model.buildings.BarCategory;
 import com.example.model.buildings.BuildingType;
 import com.example.view.Main;
@@ -15,17 +17,20 @@
     private int size;
     private ImageView imageView;
     private GameMenuController gameMenuController;
+    private String where;
 
-    public BuildingImage(HBox imageHBox, String name, int size, GameMenuController gameMenuController, boolean type) {
+    public BuildingImage(HBox imageHBox, String name, int size, GameMenuController gameMenuController, boolean type
+    ,String where) {
         this.imageHBox = imageHBox;
         this.name = name;
         this.size = size;
         this.gameMenuController = gameMenuController;
-        Image image = new Image(Main.class.getResourceAsStream("/images/buildings/" + name + ".png"));
+        this.where = where;
+        Image image = new Image(Main.class.getResourceAsStream("/images/"+ where +"/" + name + ".png"));
         imageView = new ImageView(image);
         imageView.setFitHeight(size);
         imageView.setFitWidth(size);
-        if (type){
+        if (type && where.equals("buildings")){
             imageHBox.getChildren().add(imageView);
             imageView.setOnMouseClicked(new EventHandler<MouseEvent>() {
                 @Override
@@ -34,7 +39,7 @@
                 }
             });
         }
-        else {
+        else if (!type && where.equals("buildings")) {
             imageView.setOnMouseClicked(new EventHandler<MouseEvent>() {
                 @Override
                 public void handle(MouseEvent mouseEvent) {
@@ -42,6 +47,22 @@
                 }
             });
         }
+        else if (type && where.equals("assets")){
+            imageView.setOnMouseClicked(new EventHandler<MouseEvent>() {
+                @Override
+                public void handle(MouseEvent mouseEvent) {
+                    gameMenuController.changeShopAssetType(AssetType.getAssetTypeByName(name));
+                }
+            });
+        }
+        else {
+            imageView.setOnMouseClicked(new EventHandler<MouseEvent>() {
+                @Override
+                public void handle(MouseEvent mouseEvent) {
+                    gameMenuController.clickOnAsset(Asset.getAssetByName(name));
+                }
+            });
+        }
         //imageHBox.getChildren().add(imageView);
     }
 
Index: src/main/java/com/example/model/assets/AssetType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.model.assets;\r\n\r\nimport com.example.model.buildings.StorageType;\r\n\r\npublic enum AssetType {\r\n    FOOD (\"Food\",StorageType.GRANARY),\r\n    WEAPON (\"Weapon\", StorageType.ARMOURY),\r\n    RESOURCE (\"Resource\", StorageType.STOCKPILE);\r\n\r\n    private final String name;\r\n    private final StorageType storageType;\r\n\r\n    AssetType(String name, StorageType storageType) {\r\n        this.name = name;\r\n        this.storageType = storageType;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public StorageType getStorageType(){\r\n        return this.storageType;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/model/assets/AssetType.java b/src/main/java/com/example/model/assets/AssetType.java
--- a/src/main/java/com/example/model/assets/AssetType.java	(revision 8dbe9a7d50f87a9a2f7951693ca60e813a724bee)
+++ b/src/main/java/com/example/model/assets/AssetType.java	(date 1687984287145)
@@ -22,5 +22,12 @@
     public StorageType getStorageType(){
         return this.storageType;
     }
+    public static AssetType getAssetTypeByName(String name){
+        for (AssetType assetType : AssetType.values()){
+            if (assetType.getName().equals(name))
+                return assetType;
+        }
+        return null;
+    }
 
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"f288306d-0141-4ba9-ad2b-a92a921ee550\" name=\"Changes\" comment=\"add remainders\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/images/buildings/Armourer.png\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/images/buildings/Armourer.png\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/images/buildings/Barracks.png\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/images/buildings/Barracks.png\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/images/buildings/Blacksmith.png\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/images/buildings/Blacksmith.png\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/images/buildings/Church.png\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/images/buildings/Church.png\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/images/buildings/Drawbridge.png\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/images/buildings/Drawbridge.png\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/images/buildings/Fletcher.png\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/images/buildings/Fletcher.png\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/images/buildings/Inn.png\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/images/buildings/Inn.png\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/images/buildings/Poleturner.png\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/images/buildings/Poleturner.png\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/images/buildings/Quarry.png\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/images/buildings/Quarry.png\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/images/buildings/Stable.png\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/images/buildings/Stable.png\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"new_Menus\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2QR3T8bkS02uWAvlog7BzFvoNq0\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;/Users/fraxea/Desktop/frAxeA/term2/AP/project/project-group18&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"f288306d-0141-4ba9-ad2b-a92a921ee550\" name=\"Changes\" comment=\"Bottom Bar completed\" />\r\n      <created>1685302575628</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1685302575628</updated>\r\n      <workItem from=\"1685302578417\" duration=\"8012000\" />\r\n      <workItem from=\"1685343278880\" duration=\"12000\" />\r\n      <workItem from=\"1685367005928\" duration=\"4887000\" />\r\n      <workItem from=\"1685437111415\" duration=\"10349000\" />\r\n      <workItem from=\"1685519946688\" duration=\"3165000\" />\r\n      <workItem from=\"1685526506935\" duration=\"11000\" />\r\n      <workItem from=\"1685526998168\" duration=\"7716000\" />\r\n      <workItem from=\"1685648124111\" duration=\"1277000\" />\r\n      <workItem from=\"1685706691121\" duration=\"1018000\" />\r\n      <workItem from=\"1685708022769\" duration=\"6239000\" />\r\n      <workItem from=\"1685716083539\" duration=\"2436000\" />\r\n      <workItem from=\"1685731115291\" duration=\"11751000\" />\r\n      <workItem from=\"1685809345327\" duration=\"4576000\" />\r\n      <workItem from=\"1685893029808\" duration=\"7172000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"tag\">\r\n      <created>1685305307071</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685305307071</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"testing prompt text for unmasked password\">\r\n      <created>1685310099246</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685310099246</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"textField passwordField style for password show try\">\r\n      <created>1685311845919</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685311845919</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"fixed show password hopefully\">\r\n      <created>1685442820352</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685442820352</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"half done slogan\">\r\n      <created>1685455932991</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685455932991</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"signup hopefully done\">\r\n      <created>1685483238774</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685483238774</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"security question and captcha\">\r\n      <created>1685713869397</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685713869397</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"a commit\">\r\n      <created>1685731152351</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685731152351</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"login when answered security question\">\r\n      <created>1685814050921</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685814050921</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Main Menu\">\r\n      <created>1685814985857</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685814985857</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"start game\">\r\n      <created>1685979967030</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685979967030</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Bottom Bar completed\">\r\n      <created>1687941767024</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687941767024</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Bottom Bar completed\">\r\n      <created>1687941976394</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687941976394</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Bottom Bar completed\">\r\n      <created>1687942155173</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687942155173</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"15\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"tag\" />\r\n    <MESSAGE value=\"testing prompt text for unmasked password\" />\r\n    <MESSAGE value=\"textField passwordField style for password show try\" />\r\n    <MESSAGE value=\"fixed show password hopefully\" />\r\n    <MESSAGE value=\"half done slogan\" />\r\n    <MESSAGE value=\"signup hopefully done\" />\r\n    <MESSAGE value=\"security question and captcha\" />\r\n    <MESSAGE value=\"a commit\" />\r\n    <MESSAGE value=\"login when answered security question\" />\r\n    <MESSAGE value=\"Main Menu\" />\r\n    <MESSAGE value=\"start game\" />\r\n    <MESSAGE value=\"Bottom Bar completed\" />\r\n    <MESSAGE value=\"add remainders\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"add remainders\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/project_group_18$LoginMenuTest.ic\" NAME=\"LoginMenuTest Coverage Results\" MODIFIED=\"1683974377815\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 8dbe9a7d50f87a9a2f7951693ca60e813a724bee)
+++ b/.idea/workspace.xml	(date 1688032358452)
@@ -4,18 +4,23 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="f288306d-0141-4ba9-ad2b-a92a921ee550" name="Changes" comment="add remainders">
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/images/buildings/Armourer.png" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/images/buildings/Armourer.png" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/images/buildings/Barracks.png" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/images/buildings/Barracks.png" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/images/buildings/Blacksmith.png" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/images/buildings/Blacksmith.png" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/images/buildings/Church.png" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/images/buildings/Church.png" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/images/buildings/Drawbridge.png" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/images/buildings/Drawbridge.png" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/images/buildings/Fletcher.png" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/images/buildings/Fletcher.png" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/images/buildings/Inn.png" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/images/buildings/Inn.png" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/images/buildings/Poleturner.png" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/images/buildings/Poleturner.png" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/images/buildings/Quarry.png" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/images/buildings/Quarry.png" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/images/buildings/Stable.png" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/images/buildings/Stable.png" afterDir="false" />
+    <list default="true" id="f288306d-0141-4ba9-ad2b-a92a921ee550" name="Changes" comment="drop building started">
+      <change afterPath="$PROJECT_DIR$/src/main/resources/images/Weapon/0_0img97.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/images/Weapon/0_0img98.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/images/assets/Food.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/images/assets/Metal Armour.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/images/assets/Resource.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/images/assets/Weapon.png" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2023_12_03_AM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2023_12_03_AM__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2023_12_03_AM__Changes_1.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_26_2023_12_03_AM__Changes_1.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/model/BuildingImage.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/model/BuildingImage.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/model/assets/AssetType.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/model/assets/AssetType.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/model/map/MapGestures.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/model/map/MapGestures.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/view/controllers/GameMenuController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/view/controllers/GameMenuController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/com/example/model/assets/AssetType.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/example/model/assets/AssetType.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/com/example/view/controllers/GameMenuController.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/example/view/controllers/GameMenuController.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/maps/defaultMap.bin" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/maps/defaultMap.bin" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -58,17 +63,27 @@
     &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
     &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;last_opened_file_path&quot;: &quot;/Users/fraxea/Desktop/frAxeA/term2/AP/project/project-group18&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/user/IdeaProjects/project-group-18/src/main/resources/images/assets&quot;,
     &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
     &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
     &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;inlay.hints&quot;
   }
 }</component>
+  <component name="RecentsManager">
+    <key name="CopyFile.RECENT_KEYS">
+      <recent name="C:\Users\user\IdeaProjects\project-group-18\src\main\resources\images\assets" />
+    </key>
+    <key name="MoveFile.RECENT_KEYS">
+      <recent name="C:\Users\user\IdeaProjects\project-group-18\src\main\resources\images\Weapon" />
+      <recent name="C:\Users\user\IdeaProjects\project-group-18\src\main\resources\images\assets" />
+    </key>
+  </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
-      <changelist id="f288306d-0141-4ba9-ad2b-a92a921ee550" name="Changes" comment="Bottom Bar completed" />
+      <changelist id="f288306d-0141-4ba9-ad2b-a92a921ee550" name="Changes" comment="drop building started" />
       <created>1685302575628</created>
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
@@ -87,6 +102,7 @@
       <workItem from="1685731115291" duration="11751000" />
       <workItem from="1685809345327" duration="4576000" />
       <workItem from="1685893029808" duration="7172000" />
+      <workItem from="1688028739398" duration="1787000" />
     </task>
     <task id="LOCAL-00001" summary="tag">
       <created>1685305307071</created>
@@ -186,7 +202,14 @@
       <option name="project" value="LOCAL" />
       <updated>1687942155173</updated>
     </task>
-    <option name="localTasksCounter" value="15" />
+    <task id="LOCAL-00015" summary="drop building started">
+      <created>1687957334421</created>
+      <option name="number" value="00015" />
+      <option name="presentableId" value="LOCAL-00015" />
+      <option name="project" value="LOCAL" />
+      <updated>1687957334421</updated>
+    </task>
+    <option name="localTasksCounter" value="16" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -216,8 +239,8 @@
     <MESSAGE value="Main Menu" />
     <MESSAGE value="start game" />
     <MESSAGE value="Bottom Bar completed" />
-    <MESSAGE value="add remainders" />
-    <option name="LAST_COMMIT_MESSAGE" value="add remainders" />
+    <MESSAGE value="drop building started" />
+    <option name="LAST_COMMIT_MESSAGE" value="drop building started" />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
     <SUITE FILE_PATH="coverage/project_group_18$LoginMenuTest.ic" NAME="LoginMenuTest Coverage Results" MODIFIED="1683974377815" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
